{
  "name": "Filament Icon Format",
  "description": "Ensures proper icon format for Filament applications.",
  "rules": [
    {
      "pattern": "icon\\(['\"](?!heroicon-o-|heroicon-s-|heroicon-m-|heroicon-c-|blade\\/)([^'\"]+)['\"]\\)",
      "message": "Icons should be prefixed with 'heroicon-o-', 'heroicon-s-', 'heroicon-m-', or 'heroicon-c-' depending on the style. Example: 'heroicon-o-home'"
    },
    {
      "pattern": "\\$navigationIcon\\s*=\\s*['\"](?!heroicon-o-|heroicon-s-|heroicon-m-|heroicon-c-)([^'\"]+)['\"]",
      "message": "Navigation icons should be prefixed with 'heroicon-o-', 'heroicon-s-', 'heroicon-m-', or 'heroicon-c-'. Example: 'heroicon-o-home'"
    },
    {
      "pattern": "<x-(?!heroicon-o-|heroicon-s-|heroicon-m-|heroicon-c-)(icon::heroicon|icon\\s+name=)[^>]+>",
      "message": "Blade UI Kit components should use the format <x-heroicon-o-name /> or <x-heroicon-s-name />. Don't use <x-icon::heroicon> or <x-icon name=...>"
    },
    {
      "pattern": "->icon\\(['\"](?!heroicon-o-|heroicon-s-|heroicon-m-|heroicon-c-|blade\\/)([^'\"]+)['\"]\\)",
      "message": "Component icons should be prefixed with 'heroicon-o-', 'heroicon-s-', 'heroicon-m-', or 'heroicon-c-'. Example: 'heroicon-o-check-circle'"
    },
    {
      "pattern": "['\"]heroicon-o-box['\"]",
      "message": "The 'heroicon-o-box' icon doesn't exist in Heroicons. Use 'heroicon-o-archive-box' instead."
    }
  ],
  "references": [
    {
      "name": "Filament Icons Documentation",
      "url": "https://filamentphp.com/docs/3.x/support/icons"
    },
    {
      "name": "Heroicons",
      "url": "https://heroicons.com/"
    },
    {
      "name": "Blade UI Kit Icons",
      "url": "https://blade-ui-kit.com/blade-icons"
    }
  ],
  "examples": {
    "correct": [
      "protected static ?string $navigationIcon = 'heroicon-o-home';",
      "->icon('heroicon-o-check-circle')",
      "<x-heroicon-o-home class=\"w-6 h-6\" />",
      "<x-heroicon-s-check-circle class=\"w-4 h-4\" />"
    ],
    "incorrect": [
      "protected static ?string $navigationIcon = 'home';",
      "protected static ?string $navigationIcon = 'o-home';",
      "protected static ?string $navigationIcon = 'heroicon-o-box';",
      "->icon('check-circle')",
      "<x-icon::heroicon name=\"o-home\" />",
      "<x-icon name=\"heroicon-o-home\" />"
    ]
  }
} 